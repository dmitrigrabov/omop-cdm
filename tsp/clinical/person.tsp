import "@typespec/http";
import "@typespec/rest";
import "../common/models.tsp";

using TypeSpec.Http;
using TypeSpec.Rest;
using OmopCdm.Common;

namespace OmopCdm.Clinical;

/**
 * Person Resource
 *
 * This table serves as the central identity management for all Persons
in the database. It contains records that uniquely identify each person
or patient, and some demographic information.
 *
 * **User Guide**: All records in this table are independent Persons.
 *
 * **ETL Conventions**: All Persons in a database needs one record in this table, unless they
fail data quality requirements specified in the ETL. Persons with no
Events should have a record nonetheless. If more than one data source
contributes Events to the database, Persons must be reconciled, if
possible, across the sources to create one single record per Person. The
content of the BIRTH_DATETIME must be equivalent to the content of
BIRTH_DAY, BIRTH_MONTH and BIRTH_YEAR.  
  
For detailed conventions
for how to populate this table, please refer to the [THEMIS
repository](https://ohdsi.github.io/Themis/person.html).
 */

@doc("Person record in the OMOP CDM")
model Person {
  @doc("It is assumed that every person with a different unique identifier is in fact a different person and should be treated independently. ETL Convention: Any person linkage that needs to occur to uniquely identify Persons ought to be done prior to writing this table. This identifier can be the original id from the source data provided if it is an integer, otherwise it can be an autogenerated number.")
  person_id: int64;

  @doc("This field is meant to capture the biological sex at birth of the Person. This field should not be used to study gender identity issues. ETL Convention: Use the gender or sex value present in the data under the assumption that it is the biological sex at birth. If the source data captures gender identity it should be stored in the [OBSERVATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#observation) table. [Accepted gender concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). Please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_gender_concept_id.html) for detailed conventions on how to populate this field. References CONCEPT table.")
  gender_concept_id: ConceptId;

  @doc("Compute age using year_of_birth. ETL Convention: For data sources with date of birth, the year should be extracted. If no year of birth is available all the person’s data should be dropped from the CDM instance. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_year_of_birth.html).")
  year_of_birth: int64;

  @doc("For data sources that provide the precise date of birth, the month should be extracted and stored in this field.")
  month_of_birth?: int64;

  @doc("For data sources that provide the precise date of birth, the day should be extracted and stored in this field.")
  day_of_birth?: int64;

  @doc("This field is not required but highly encouraged. For data sources that provide the precise datetime of birth, that value should be stored in this field. For more information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/person.html).")
  birth_datetime?: DateTime;

  @doc("This field captures race or ethnic background of the person. ETL Convention: Only use this field if you have information about race or ethnic background. The Vocabulary contains Concepts about the main races and ethnic backgrounds in a hierarchical system. Due to the imprecise nature of human races and ethnic backgrounds, this is not a perfect system. Mixed races are not supported. If a clear race or ethnic background cannot be established, use Concept_Id 0. [Accepted Race Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Race&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  race_concept_id: ConceptId;

  @doc("This field captures Ethnicity as defined by the Office of Management and Budget (OMB) of the US Government: it distinguishes only between “Hispanic” and “Not Hispanic”. Races and ethnic backgrounds are not stored here. ETL Convention: Only use this field if you have US-based data and a source of this information. Do not attempt to infer Ethnicity from the race or ethnic background of the Person. [Accepted ethnicity concepts](http://athena.ohdsi.org/search-terms/terms?domain=Ethnicity&standardConcept=Standard&page=1&pageSize=15&query=) References CONCEPT table.")
  ethnicity_concept_id: ConceptId;

  @doc("The location refers to the physical address of the person. This field should capture the last known location of the person. ETL Convention: Put the location_id from the [LOCATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#location) table here that represents the most granular location information for the person. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/populate_person_location_id.html). References LOCATION table.")
  location_id?: int64;

  @doc("The Provider refers to the last known primary care provider (General Practitioner). ETL Convention: Put the provider_id from the [PROVIDER](https://ohdsi.github.io/CommonDataModel/cdm54.html#provider) table of the last known general practitioner of the person. If there are multiple providers, it is up to the ETL to decide which to put here. References PROVIDER table.")
  provider_id?: int64;

  @doc("The Care Site refers to where the Provider typically provides the primary care.  References CARE_SITE table.")
  care_site_id?: int64;

  @doc("Use this field to link back to persons in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to persons in the source data. This field allows for the storing of the person value as it appears in the source. This field is not required but strongly recommended.")
  @maxLength(50)
  person_source_value?: string;

  @doc("This field is used to store the biological sex of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the assigned sex at birth of the person as it appears in the source data.")
  @maxLength(50)
  gender_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes assigned sex at birth in a non-standard vocabulary, store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;

  @doc("This field is used to store the race of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the race of the person as it appears in the source data.")
  @maxLength(50)
  race_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes race in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  race_source_concept_id?: ConceptId;

  @doc("This field is used to store the ethnicity of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: If the person has an ethnicity other than the OMB standard of “Hispanic” or “Not Hispanic” store that value from the source data here.")
  @maxLength(50)
  ethnicity_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes ethnicity in an OMOP supported vocabulary, store the concept_id here. References CONCEPT table.")
  ethnicity_source_concept_id?: ConceptId;
}

/**
 * Person creation request
 */
@doc("Request body for creating a new Person record")
model PersonCreate {
  @doc("This field is meant to capture the biological sex at birth of the Person. This field should not be used to study gender identity issues. ETL Convention: Use the gender or sex value present in the data under the assumption that it is the biological sex at birth. If the source data captures gender identity it should be stored in the [OBSERVATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#observation) table. [Accepted gender concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). Please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_gender_concept_id.html) for detailed conventions on how to populate this field. References CONCEPT table.")
  gender_concept_id: ConceptId;

  @doc("Compute age using year_of_birth. ETL Convention: For data sources with date of birth, the year should be extracted. If no year of birth is available all the person’s data should be dropped from the CDM instance. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_year_of_birth.html).")
  year_of_birth: int64;

  @doc("For data sources that provide the precise date of birth, the month should be extracted and stored in this field.")
  month_of_birth?: int64;

  @doc("For data sources that provide the precise date of birth, the day should be extracted and stored in this field.")
  day_of_birth?: int64;

  @doc("This field is not required but highly encouraged. For data sources that provide the precise datetime of birth, that value should be stored in this field. For more information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/person.html).")
  birth_datetime?: DateTime;

  @doc("This field captures race or ethnic background of the person. ETL Convention: Only use this field if you have information about race or ethnic background. The Vocabulary contains Concepts about the main races and ethnic backgrounds in a hierarchical system. Due to the imprecise nature of human races and ethnic backgrounds, this is not a perfect system. Mixed races are not supported. If a clear race or ethnic background cannot be established, use Concept_Id 0. [Accepted Race Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Race&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  race_concept_id: ConceptId;

  @doc("This field captures Ethnicity as defined by the Office of Management and Budget (OMB) of the US Government: it distinguishes only between “Hispanic” and “Not Hispanic”. Races and ethnic backgrounds are not stored here. ETL Convention: Only use this field if you have US-based data and a source of this information. Do not attempt to infer Ethnicity from the race or ethnic background of the Person. [Accepted ethnicity concepts](http://athena.ohdsi.org/search-terms/terms?domain=Ethnicity&standardConcept=Standard&page=1&pageSize=15&query=) References CONCEPT table.")
  ethnicity_concept_id: ConceptId;

  @doc("The location refers to the physical address of the person. This field should capture the last known location of the person. ETL Convention: Put the location_id from the [LOCATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#location) table here that represents the most granular location information for the person. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/populate_person_location_id.html). References LOCATION table.")
  location_id?: int64;

  @doc("The Provider refers to the last known primary care provider (General Practitioner). ETL Convention: Put the provider_id from the [PROVIDER](https://ohdsi.github.io/CommonDataModel/cdm54.html#provider) table of the last known general practitioner of the person. If there are multiple providers, it is up to the ETL to decide which to put here. References PROVIDER table.")
  provider_id?: int64;

  @doc("The Care Site refers to where the Provider typically provides the primary care.  References CARE_SITE table.")
  care_site_id?: int64;

  @doc("Use this field to link back to persons in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to persons in the source data. This field allows for the storing of the person value as it appears in the source. This field is not required but strongly recommended.")
  @maxLength(50)
  person_source_value?: string;

  @doc("This field is used to store the biological sex of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the assigned sex at birth of the person as it appears in the source data.")
  @maxLength(50)
  gender_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes assigned sex at birth in a non-standard vocabulary, store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;

  @doc("This field is used to store the race of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the race of the person as it appears in the source data.")
  @maxLength(50)
  race_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes race in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  race_source_concept_id?: ConceptId;

  @doc("This field is used to store the ethnicity of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: If the person has an ethnicity other than the OMB standard of “Hispanic” or “Not Hispanic” store that value from the source data here.")
  @maxLength(50)
  ethnicity_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes ethnicity in an OMOP supported vocabulary, store the concept_id here. References CONCEPT table.")
  ethnicity_source_concept_id?: ConceptId;
}

/**
 * Person update request
 */
@doc("Request body for updating an existing Person record")
model PersonUpdate {
  @doc("This field is meant to capture the biological sex at birth of the Person. This field should not be used to study gender identity issues. ETL Convention: Use the gender or sex value present in the data under the assumption that it is the biological sex at birth. If the source data captures gender identity it should be stored in the [OBSERVATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#observation) table. [Accepted gender concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). Please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_gender_concept_id.html) for detailed conventions on how to populate this field. References CONCEPT table.")
  gender_concept_id?: ConceptId;

  @doc("Compute age using year_of_birth. ETL Convention: For data sources with date of birth, the year should be extracted. If no year of birth is available all the person’s data should be dropped from the CDM instance. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/tag_year_of_birth.html).")
  year_of_birth?: int64;

  @doc("For data sources that provide the precise date of birth, the month should be extracted and stored in this field.")
  month_of_birth?: int64;

  @doc("For data sources that provide the precise date of birth, the day should be extracted and stored in this field.")
  day_of_birth?: int64;

  @doc("This field is not required but highly encouraged. For data sources that provide the precise datetime of birth, that value should be stored in this field. For more information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/person.html).")
  birth_datetime?: DateTime;

  @doc("This field captures race or ethnic background of the person. ETL Convention: Only use this field if you have information about race or ethnic background. The Vocabulary contains Concepts about the main races and ethnic backgrounds in a hierarchical system. Due to the imprecise nature of human races and ethnic backgrounds, this is not a perfect system. Mixed races are not supported. If a clear race or ethnic background cannot be established, use Concept_Id 0. [Accepted Race Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Race&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  race_concept_id?: ConceptId;

  @doc("This field captures Ethnicity as defined by the Office of Management and Budget (OMB) of the US Government: it distinguishes only between “Hispanic” and “Not Hispanic”. Races and ethnic backgrounds are not stored here. ETL Convention: Only use this field if you have US-based data and a source of this information. Do not attempt to infer Ethnicity from the race or ethnic background of the Person. [Accepted ethnicity concepts](http://athena.ohdsi.org/search-terms/terms?domain=Ethnicity&standardConcept=Standard&page=1&pageSize=15&query=) References CONCEPT table.")
  ethnicity_concept_id?: ConceptId;

  @doc("The location refers to the physical address of the person. This field should capture the last known location of the person. ETL Convention: Put the location_id from the [LOCATION](https://ohdsi.github.io/CommonDataModel/cdm54.html#location) table here that represents the most granular location information for the person. For additional information on how to populate this field, please refer to the [THEMIS repository](https://ohdsi.github.io/Themis/populate_person_location_id.html). References LOCATION table.")
  location_id?: int64;

  @doc("The Provider refers to the last known primary care provider (General Practitioner). ETL Convention: Put the provider_id from the [PROVIDER](https://ohdsi.github.io/CommonDataModel/cdm54.html#provider) table of the last known general practitioner of the person. If there are multiple providers, it is up to the ETL to decide which to put here. References PROVIDER table.")
  provider_id?: int64;

  @doc("The Care Site refers to where the Provider typically provides the primary care.  References CARE_SITE table.")
  care_site_id?: int64;

  @doc("Use this field to link back to persons in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to persons in the source data. This field allows for the storing of the person value as it appears in the source. This field is not required but strongly recommended.")
  person_source_value?: string;

  @doc("This field is used to store the biological sex of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the assigned sex at birth of the person as it appears in the source data.")
  gender_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes assigned sex at birth in a non-standard vocabulary, store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;

  @doc("This field is used to store the race of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: Put the race of the person as it appears in the source data.")
  race_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes race in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  race_source_concept_id?: ConceptId;

  @doc("This field is used to store the ethnicity of the person from the source data. It is not intended for use in standard analytics but for reference only. ETL Convention: If the person has an ethnicity other than the OMB standard of “Hispanic” or “Not Hispanic” store that value from the source data here.")
  ethnicity_source_value?: string;

  @doc("Due to the small number of options, this tends to be zero. ETL Convention: If the source data codes ethnicity in an OMOP supported vocabulary, store the concept_id here. References CONCEPT table.")
  ethnicity_source_concept_id?: ConceptId;
}

/**
 * Query parameters for filtering person
 */
@doc("Filter parameters for Person list operations")
model PersonQueryParams {
  ...PaginationParams;

  @doc("Filter by gender concept id")
  @query
  gender_concept_id?: ConceptId;

  @doc("Filter by race concept id")
  @query
  race_concept_id?: ConceptId;

  @doc("Filter by ethnicity concept id")
  @query
  ethnicity_concept_id?: ConceptId;

  @doc("Filter by location id")
  @query
  location_id?: int64;

  @doc("Filter by provider id")
  @query
  provider_id?: int64;

  @doc("Filter by care site id")
  @query
  care_site_id?: int64;

  @doc("Filter by gender source concept id")
  @query
  gender_source_concept_id?: ConceptId;

  @doc("Filter by race source concept id")
  @query
  race_source_concept_id?: ConceptId;

  @doc("Filter by ethnicity source concept id")
  @query
  ethnicity_source_concept_id?: ConceptId;

  @doc("Sort field")
  @query
  sort_by?: "person_id";

  @doc("Sort order")
  @query
  sort_order?: SortOrder;
}

/**
 * Person API operations
 */
@route("/persons")
@tag("Clinical - Persons")
interface Persons {
  @get
  @summary("List all persons")
  @doc("Returns a paginated list of Person records.")
  list(
    ...PersonQueryParams,
  ): {
    @statusCode statusCode: 200;
    @body body: PaginatedList<Person>;
  } | ErrorResponse;

  @get
  @summary("Get person by ID")
  @doc("Retrieve a single Person record by its unique identifier.")
  read(
    @path
    @doc("Unique person identifier")
    person_id: int64,
  ): {
    @statusCode statusCode: 200;
    @body body: Person;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @post
  @summary("Create a new person")
  @doc("Create a new Person record.")
  create(
    @body
    @doc("Person data to create")
    record: PersonCreate,
  ): {
    @statusCode statusCode: 201;
    @body body: Person;
  } | {
    @statusCode statusCode: 400;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @put
  @summary("Update person (full replacement)")
  @doc("Replace all fields of an existing Person record.")
  update(
    @path
    @doc("Unique person identifier")
    person_id: int64,

    @body
    @doc("Complete person data")
    record: PersonCreate,
  ): {
    @statusCode statusCode: 200;
    @body body: Person;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | {
    @statusCode statusCode: 400;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @patch(#{implicitOptionality: true})
  @summary("Update person (partial)")
  @doc("Update specific fields of an existing Person record.")
  patch(
    @path
    @doc("Unique person identifier")
    person_id: int64,

    @body
    @doc("Fields to update")
    record: PersonUpdate,
  ): {
    @statusCode statusCode: 200;
    @body body: Person;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @delete
  @summary("Delete person")
  @doc("Delete a Person record.")
  delete(
    @path
    @doc("Unique person identifier")
    person_id: int64,
  ): {
    @statusCode statusCode: 204;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;
}
