import "@typespec/http";
import "@typespec/rest";
import "../common/models.tsp";

using TypeSpec.Http;
using TypeSpec.Rest;
using OmopCdm.Common;

namespace OmopCdm.Healthsystem;

/**
 * Provider Resource
 *
 * The PROVIDER table contains a list of uniquely identified healthcare
providers; duplication is not allowed. These are individuals providing
hands-on healthcare to patients, such as physicians, nurses, midwives,
physical therapists etc.
 *
 * **User Guide**: Many sources do not make a distinction between individual and
institutional providers. The PROVIDER table contains the individual
providers. If the source only provides limited information such as
specialty instead of uniquely identifying individual providers, generic
or ‘pooled’ Provider records are listed in the PROVIDER table.
 *
 * **ETL Conventions**: NA
 */

@doc("Provider record in the OMOP CDM")
@example(#{
  id: 12345,
  provider_name: "Example value",
  npi: "Example value",
  dea: "Example value",
  specialty_concept_id: 8507,
  care_site_id: 100,
  year_of_birth: 100,
  gender_concept_id: 8507,
  provider_source_value: "Example value",
  specialty_source_value: "Example value",
  specialty_source_concept_id: 8507,
  gender_source_value: "Example value",
  gender_source_concept_id: 8507
})
model Provider {
  @doc("It is assumed that every provider with a different unique identifier is in fact a different person and should be treated independently. ETL Convention: This identifier can be the original id from the source data provided it is an integer, otherwise it can be an autogenerated number.")
  id: int64;

  @doc("This field contains information that describes a healthcare provider. ETL Convention: This field is not required for identifying the Provider’s actual identity. Instead, its purpose is to uniquely and/or anonymously identify providers of care across the database.")
  @maxLength(255)
  provider_name?: string;

  @doc("This is the National Provider Number issued to health care providers in the US by the Centers for Medicare and Medicaid Services (CMS).")
  @maxLength(20)
  npi?: string;

  @doc("This is the identifier issued by the DEA, a US federal agency, that allows a provider to write prescriptions for controlled substances.")
  @maxLength(20)
  dea?: string;

  @doc("This field either represents the most common specialty that occurs in the data or the most specific concept that represents all specialties listed, should the provider have more than one. This includes physician specialties such as internal medicine, emergency medicine, etc. and allied health professionals such as nurses, midwives, and pharmacists. ETL Convention: If a Provider has more than one Specialty, there are two options: 1. Choose a concept_id which is a common ancestor to the multiple specialties, or, 2. Choose the specialty that occurs most often for the provider. Concepts in this field should be Standard with a domain of Provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Provider&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  specialty_concept_id?: ConceptId;

  @doc("This is the CARE_SITE_ID for the location that the provider primarily practices in. ETL Convention: If a Provider has more than one Care Site, the main or most often exerted CARE_SITE_ID should be recorded. References CARE_SITE table.")
  care_site_id?: int64;

  @doc("")
  year_of_birth?: int64;

  @doc("This field represents the recorded gender of the provider in the source data. ETL Convention: If given, put a concept from the gender domain representing the recorded gender of the provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  gender_concept_id?: ConceptId;

  @doc("Use this field to link back to providers in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to providers in the source data. This field allows for the storing of the provider identifier as it appears in the source.")
  @maxLength(50)
  provider_source_value?: string;

  @doc("This refers to the specific type of healthcare provider or field of expertise listed in the source data, encompassing physician specialties like internal medicine, emergency medicine, etc., as well as allied health professionals such as nurses, midwives, and pharmacists. It covers medical specialties like surgery, internal medicine, and radiology, while other services like prosthetics, acupuncture, and physical therapy fall under the domain of “Service.” ETL Convention: The type of provider and their specialty should be entered as they appear in the source data. The decision to use either the coded value or the text description is left to the discretion of the ETL-er.")
  @maxLength(50)
  specialty_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store physician speciality. ETL Convention: If the source data codes provider specialty in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  specialty_source_concept_id?: ConceptId;

  @doc("This is provider’s gender as it appears in the source data. ETL Convention: Put the provider’s gender as it appears in the source data. This field is up to the discretion of the ETL-er as to whether this should be the coded value from the source or the text description of the lookup value.")
  @maxLength(50)
  gender_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store provider gender. ETL Convention: If the source data codes provider gender in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;
}

/**
 * Provider creation request
 */
@doc("Request body for creating a new Provider record")
model ProviderCreate {
  @doc("This field contains information that describes a healthcare provider. ETL Convention: This field is not required for identifying the Provider’s actual identity. Instead, its purpose is to uniquely and/or anonymously identify providers of care across the database.")
  @maxLength(255)
  provider_name?: string;

  @doc("This is the National Provider Number issued to health care providers in the US by the Centers for Medicare and Medicaid Services (CMS).")
  @maxLength(20)
  npi?: string;

  @doc("This is the identifier issued by the DEA, a US federal agency, that allows a provider to write prescriptions for controlled substances.")
  @maxLength(20)
  dea?: string;

  @doc("This field either represents the most common specialty that occurs in the data or the most specific concept that represents all specialties listed, should the provider have more than one. This includes physician specialties such as internal medicine, emergency medicine, etc. and allied health professionals such as nurses, midwives, and pharmacists. ETL Convention: If a Provider has more than one Specialty, there are two options: 1. Choose a concept_id which is a common ancestor to the multiple specialties, or, 2. Choose the specialty that occurs most often for the provider. Concepts in this field should be Standard with a domain of Provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Provider&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  specialty_concept_id?: ConceptId;

  @doc("This is the CARE_SITE_ID for the location that the provider primarily practices in. ETL Convention: If a Provider has more than one Care Site, the main or most often exerted CARE_SITE_ID should be recorded. References CARE_SITE table.")
  care_site_id?: int64;

  @doc("")
  year_of_birth?: int64;

  @doc("This field represents the recorded gender of the provider in the source data. ETL Convention: If given, put a concept from the gender domain representing the recorded gender of the provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  gender_concept_id?: ConceptId;

  @doc("Use this field to link back to providers in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to providers in the source data. This field allows for the storing of the provider identifier as it appears in the source.")
  @maxLength(50)
  provider_source_value?: string;

  @doc("This refers to the specific type of healthcare provider or field of expertise listed in the source data, encompassing physician specialties like internal medicine, emergency medicine, etc., as well as allied health professionals such as nurses, midwives, and pharmacists. It covers medical specialties like surgery, internal medicine, and radiology, while other services like prosthetics, acupuncture, and physical therapy fall under the domain of “Service.” ETL Convention: The type of provider and their specialty should be entered as they appear in the source data. The decision to use either the coded value or the text description is left to the discretion of the ETL-er.")
  @maxLength(50)
  specialty_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store physician speciality. ETL Convention: If the source data codes provider specialty in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  specialty_source_concept_id?: ConceptId;

  @doc("This is provider’s gender as it appears in the source data. ETL Convention: Put the provider’s gender as it appears in the source data. This field is up to the discretion of the ETL-er as to whether this should be the coded value from the source or the text description of the lookup value.")
  @maxLength(50)
  gender_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store provider gender. ETL Convention: If the source data codes provider gender in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;
}

/**
 * Provider update request
 */
@doc("Request body for updating an existing Provider record")
model ProviderUpdate {
  @doc("This field contains information that describes a healthcare provider. ETL Convention: This field is not required for identifying the Provider’s actual identity. Instead, its purpose is to uniquely and/or anonymously identify providers of care across the database.")
  provider_name?: string;

  @doc("This is the National Provider Number issued to health care providers in the US by the Centers for Medicare and Medicaid Services (CMS).")
  npi?: string;

  @doc("This is the identifier issued by the DEA, a US federal agency, that allows a provider to write prescriptions for controlled substances.")
  dea?: string;

  @doc("This field either represents the most common specialty that occurs in the data or the most specific concept that represents all specialties listed, should the provider have more than one. This includes physician specialties such as internal medicine, emergency medicine, etc. and allied health professionals such as nurses, midwives, and pharmacists. ETL Convention: If a Provider has more than one Specialty, there are two options: 1. Choose a concept_id which is a common ancestor to the multiple specialties, or, 2. Choose the specialty that occurs most often for the provider. Concepts in this field should be Standard with a domain of Provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Provider&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  specialty_concept_id?: ConceptId;

  @doc("This is the CARE_SITE_ID for the location that the provider primarily practices in. ETL Convention: If a Provider has more than one Care Site, the main or most often exerted CARE_SITE_ID should be recorded. References CARE_SITE table.")
  care_site_id?: int64;

  @doc("")
  year_of_birth?: int64;

  @doc("This field represents the recorded gender of the provider in the source data. ETL Convention: If given, put a concept from the gender domain representing the recorded gender of the provider. [Accepted Concepts](http://athena.ohdsi.org/search-terms/terms?domain=Gender&standardConcept=Standard&page=1&pageSize=15&query=). References CONCEPT table.")
  gender_concept_id?: ConceptId;

  @doc("Use this field to link back to providers in the source data. This is typically used for error checking of ETL logic. ETL Convention: Some use cases require the ability to link back to providers in the source data. This field allows for the storing of the provider identifier as it appears in the source.")
  provider_source_value?: string;

  @doc("This refers to the specific type of healthcare provider or field of expertise listed in the source data, encompassing physician specialties like internal medicine, emergency medicine, etc., as well as allied health professionals such as nurses, midwives, and pharmacists. It covers medical specialties like surgery, internal medicine, and radiology, while other services like prosthetics, acupuncture, and physical therapy fall under the domain of “Service.” ETL Convention: The type of provider and their specialty should be entered as they appear in the source data. The decision to use either the coded value or the text description is left to the discretion of the ETL-er.")
  specialty_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store physician speciality. ETL Convention: If the source data codes provider specialty in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  specialty_source_concept_id?: ConceptId;

  @doc("This is provider’s gender as it appears in the source data. ETL Convention: Put the provider’s gender as it appears in the source data. This field is up to the discretion of the ETL-er as to whether this should be the coded value from the source or the text description of the lookup value.")
  gender_source_value?: string;

  @doc("This is often zero as many sites use proprietary codes to store provider gender. ETL Convention: If the source data codes provider gender in an OMOP supported vocabulary store the concept_id here. References CONCEPT table.")
  gender_source_concept_id?: ConceptId;
}

/**
 * Query parameters for filtering provider
 */
@doc("Filter parameters for Provider list operations")
model ProviderQueryParams {
  ...PaginationParams;

  @doc("Filter by specialty concept id")
  @query
  specialty_concept_id?: ConceptId;

  @doc("Filter by care site id")
  @query
  care_site_id?: int64;

  @doc("Filter by gender concept id")
  @query
  gender_concept_id?: ConceptId;

  @doc("Filter by specialty source concept id")
  @query
  specialty_source_concept_id?: ConceptId;

  @doc("Filter by gender source concept id")
  @query
  gender_source_concept_id?: ConceptId;

  @doc("Sort field")
  @query
  sort_by?: "id";

  @doc("Sort order")
  @query
  sort_order?: SortOrder;
}

/**
 * Provider list response with example
 */
@doc("Paginated list of Provider records")
@example(#{
  data: #[#{
  id: 12345,
  provider_name: "Example value",
  npi: "Example value",
  dea: "Example value",
  specialty_concept_id: 8507,
  care_site_id: 100,
  year_of_birth: 100,
  gender_concept_id: 8507,
  provider_source_value: "Example value",
  specialty_source_value: "Example value",
  specialty_source_concept_id: 8507,
  gender_source_value: "Example value",
  gender_source_concept_id: 8507
}],
  pagination: #{
    total: 1,
    offset: 0,
    limit: 100,
    count: 1
  }
})
model ProviderList {
  ...PaginatedList<Provider>;
}

/**
 * Provider API operations
 */
@route("/providers")
@tag("Health System - Providers")
interface Providers {
  @get
  @summary("List all providers")
  @doc("Returns a paginated list of Provider records.")
  list(
    ...ProviderQueryParams,
  ): {
    @statusCode statusCode: 200;
    @body body: ProviderList;
  } | ErrorResponse;

  @get
  @summary("Get provider by ID")
  @doc("Retrieve a single Provider record by its unique identifier.")
  read(
    @path
    @doc("Unique provider identifier")
    id: string,
  ): {
    @statusCode statusCode: 200;
    @body body: Provider;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @post
  @summary("Create a new provider")
  @doc("Create a new Provider record.")
  create(
    @body
    @doc("Provider data to create")
    record: ProviderCreate,
  ): {
    @statusCode statusCode: 201;
    @body body: Provider;
  } | {
    @statusCode statusCode: 400;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @put
  @summary("Update provider (full replacement)")
  @doc("Replace all fields of an existing Provider record.")
  update(
    @path
    @doc("Unique provider identifier")
    id: string,

    @body
    @doc("Complete provider data")
    record: ProviderCreate,
  ): {
    @statusCode statusCode: 200;
    @body body: Provider;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | {
    @statusCode statusCode: 400;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @patch(#{implicitOptionality: true})
  @summary("Update provider (partial)")
  @doc("Update specific fields of an existing Provider record.")
  patch(
    @path
    @doc("Unique provider identifier")
    id: string,

    @body
    @doc("Fields to update")
    record: ProviderUpdate,
  ): {
    @statusCode statusCode: 200;
    @body body: Provider;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;

  @delete
  @summary("Delete provider")
  @doc("Delete a Provider record.")
  delete(
    @path
    @doc("Unique provider identifier")
    id: string,
  ): {
    @statusCode statusCode: 204;
  } | {
    @statusCode statusCode: 404;
    @body body: ErrorResponse;
  } | ErrorResponse;
}
